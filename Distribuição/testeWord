import re
from datetime import datetime
import mysql.connector
import os
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
import uuid  # Importando a biblioteca uuid para gerar identificadores únicos

# Configuração do banco de dados
db_config = {
    'host': '26.191.28.12',
    'port': '3306',
    'user': 'pedro',
    'password': '123456',
    'database': 'apidistribuicao'
}

try:
    db_connection = mysql.connector.connect(**db_config)
    db_cursor = db_connection.cursor()

    # Puxar dados de configuração do SMTP
    db_cursor.execute("SELECT smtp_host, smtp_port, smtp_username, smtp_password, url_thumbnail FROM companies LIMIT 1")
    smtp_config = db_cursor.fetchone()

    if smtp_config:
        smtp_host, smtp_port, smtp_user, smtp_password, logo = smtp_config
        email_receiver = 'ligcontatopedro1@gmail.com'
        bcc_receivers  = 'pedroquintas1213@gmail.com'
    else:
        print("Configuração SMTP não encontrada.")
        exit()
except mysql.connector.Error as err:
    print(f"Erro ao conectar ao banco de dados: {err}")
    exit()

data_do_dia = datetime.now()
data_formatada = data_do_dia.strftime('%Y-%m-%d')

try:
    db_connection = mysql.connector.connect(**db_config)
    db_cursor = db_connection.cursor()

    query_cod_escritorio = (
        "SELECT cod_escritorio FROM processo "
        "WHERE DATE(data_insercao) = %s "
        "GROUP BY cod_escritorio"
    )
    db_cursor.execute(query_cod_escritorio, (data_formatada,))
    cod_escritorios = db_cursor.fetchall()
    cod_escritorios = [row[0] for row in cod_escritorios]

    if not cod_escritorios:
        print("Nenhum código de escritório encontrado para a data especificada.")
        exit()

    # Dicionário para armazenar os dados agrupados por cliente
    clientes_data = {}

    for cod_escritorio in cod_escritorios:
        query = (
            "SELECT c.Cliente_VSAP as clienteVSAP, p.Cod_escritorio, p.numero_processo, "
            "MAX(p.data_distribuicao) as data_distribuicao, "
            "p.orgao_julgador, p.tipo_processo, p.status, "
            "GROUP_CONCAT(DISTINCT a.nome ORDER BY a.nome SEPARATOR ', ') AS nomesAutores, "
            "GROUP_CONCAT(DISTINCT r.nome ORDER BY r.nome SEPARATOR ', ') AS nomesReus, "
            "GROUP_CONCAT(distinct l.link_documento order by l.link_documento separator ' | ') as Link, "
            "p.uf, p.sigla_sistema, MAX(p.instancia), p.tribunal, MAX(p.ID_processo), MAX(p.LocatorDB), p.tipo_processo "
            "FROM apidistribuicao.processo AS p "
            "LEFT JOIN apidistribuicao.clientes AS c ON p.Cod_escritorio = c.Cod_escritorio "
            "LEFT JOIN apidistribuicao.processo_autor AS a ON p.ID_processo = a.ID_processo "
            "LEFT JOIN apidistribuicao.processo_reu AS r ON p.ID_processo = r.ID_processo "
            "LEFT JOIN apidistribuicao.processo_docinicial as l ON p.ID_processo = l.ID_processo "
            "WHERE DATE(p.data_insercao) = %s "
            "AND l.doc_peticao_inicial = 0 "
            "AND p.Cod_escritorio = %s "
            "AND p.status = 'S' "
            "GROUP BY p.numero_processo, clienteVSAP, p.Cod_escritorio, p.orgao_julgador, p.tipo_processo, p.uf, p.sigla_sistema, p.tribunal;"
        )

        db_cursor.execute(query, (data_formatada, cod_escritorio))
        results = db_cursor.fetchall()
        localizador = str(uuid.uuid4())

        for result in results:
            clienteVSAP = result[0]
            num_processo = result[2]
            data_distribuicao = datetime.strptime(str(result[3]), '%Y-%m-%d').strftime('%d/%m/%Y')
            tribunal = result[13]
            uf = result[10]
            instancia = result[12]
            comarca = result[11]
            polo_ativo = result[7] if result[7] else "[Nenhum dado disponível]"
            polo_passivo = result[8] if result[8] else "[Nenhum dado disponível]"

            querylinks = ("SELECT * FROM apidistribuicao.processo_docinicial WHERE ID_PROCESSO = %s "
                           "AND doc_peticao_inicial= 0  ")
            db_cursor.execute(querylinks, (result[14],))
            results_links = db_cursor.fetchall()

            links_list = []
            for links in results_links:
                id_link = links[1]
                link_doc = links[2]
                tipoLink = links[3]
                links_list.append({'link_doc': link_doc, 'tipoLink': tipoLink, 'id_link': id_link})

            # Adiciona os dados do processo ao dicionário de clientes
            if clienteVSAP not in clientes_data:
                clientes_data[clienteVSAP] = []

            clientes_data[clienteVSAP].append({
                'numero_processo': num_processo,
                'data_distribuicao': data_distribuicao,
                'orgao': result[4],
                'classe_judicial': result[5],
                'polo_ativo': polo_ativo,
                'polo_passivo': polo_passivo,
                'links': links_list,
                'tribunal': tribunal,
                'uf': uf,
                'instancia': instancia,
                'comarca': comarca,
                'localizador': localizador,
                'tipo_processo': result[16]
            })
        insert_query = """
            INSERT INTO envio_emails (cod_processo, numero_processo, cod_escritorio, localizador_processo, data_envio, localizador, email_envio, data_hora_envio)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
            """
        db_cursor.execute(insert_query, (result[14], num_processo, cod_escritorio, result[15], data_formatada, localizador, email_receiver, datetime.now()))
        db_connection.commit()  
    # Envio de email para cada cliente com todos os seus processos
    for cliente, processos in clientes_data.items():
        email_body = ""
        total_processos = len(processos)  # Total de processos para o cliente

        for idx, processo in enumerate(processos, start=1):  # Contador começando de 1
            email_body += f"""
                <div class="processo">
                    <p><strong>Distribuição {idx} de {total_processos}</strong></p> </br>  <!-- Contador -->
                    <p>Tribunal: {processo['tribunal']}</p></br>
                    <p>UF/Instância/Comarca: {processo['uf']}/{processo['instancia']}/{processo['comarca']}</p></br>
                    <p>Número do Processo: {processo['numero_processo']}</p></br>
                    <p>Data de Distribuição: {processo['data_distribuicao']}</p></br>
                    <p>Órgão: {processo['orgao']}</p></br>
                    <p>Classe Judicial: {processo['classe_judicial']}</p></br>
                    <p>Polo Ativo: {processo['polo_ativo']}</p></br>
                    <p>Polo Passivo: {processo['polo_passivo']}</p></br>
                    <div class="links">
                        <p><strong>Links:</strong></p></br>
            """
            for link_info in processo['links']:
                email_body += f'<p>({link_info["tipoLink"]}): <a href="{link_info["link_doc"]}">{processo['tipo_processo']}({link_info["id_link"]})</a></p></br>'
            email_body += "</div></div>"

        email_body = f"""
            <!DOCTYPE html>
            <html lang="pt-BR">
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>{cliente}</title>
                <style>
                    body {{
                        font-family: Arial, sans-serif; 
                        margin: 0; 
                        padding: 0; 
                        background-color: #f4f4f4; 
                        color: #333; 
                        line-height: 1.6; 
                    }}
                    .container {{
                        padding: 20px; 
                        background-color: #fff; 
                        margin: 20px auto; 
                        border-radius: 8px; 
                        box-shadow: 0 4px 8px rgba(0,0,0,0.1); 
                        max-width: 800px; 
                    }}
                    .header {{
                        display: flex;
                        align-items: center;
                        justify-content: space-between;
                        padding: 10px 0;
                        border-bottom: 1px solid #ccc;
                    }}
                    .header img {{
                        max-height: 80px; 
                        margin-right: 20px;
                    }}
                    .header div {{
                        flex-grow: 1; 
                    }}
                    .processo {{
                        border: 1px solid #e0e0e0; 
                        border-radius: 8px; 
                        padding: 15px; 
                        margin-bottom: 20px; 
                        background-color: #f9f9f9; 
                    }}
                    .processo p {{
                        margin: 5px 0;
                    }}
                    .links {{
                        margin-top: 10px; 
                    }}
                    .alert {{
                        background-color: #ff4d4d; 
                        color: #fff;
                        padding: 15px;
                        border-radius: 8px;
                        margin-bottom: 20px;
                        font-weight: bold;
                    }}
                    .processo p{{
                        margin-bottom: 10px ;
                    }}
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <img src="{logo}" alt="Logo">
                        <div>
                            <h1>{cliente}</h1>
                            <p>Data: {data_do_dia.strftime('%d/%m/%y')}</p>
                            <p>Localizador: {localizador}</p>
                            <p>Total Distribuições: {total_processos} </p>

                        </div>
                    </div>
                    <div class="alert">
                        *Atenção* Esta mensagem pode conter mais conteúdo no corpo do e-mail, portanto verifique no final da mensagem se existe a opção de "Exibir toda a mensagem" para visualizar mais conteúdo.
                    </div>
                    <div class="content">
                        {email_body}
                    </div>
                </div>
            </body>
            </html>
        """

        # Envio do e-mail
        msg = MIMEMultipart()
        msg['From'] = smtp_user
        msg['To'] = email_receiver
        msg['Bcc'] = bcc_receivers
        msg['Subject'] = f"LIGCONTATOS - DISTRIBUIÇÕES {data_do_dia.strftime('%d/%m/%y')} - {cliente}"
        msg.attach(MIMEText(email_body, 'html'))

        # Envio do e-mail usando SMTP
        with smtplib.SMTP(smtp_host, smtp_port) as server:
            server.starttls()  # Segurança adicional
            server.login(smtp_user, smtp_password)
            server.send_message(msg)

    print("E-mails enviados com sucesso!")

except mysql.connector.Error as err:
    print(f"Erro ao executar a consulta: {err}")
except Exception as e:
    print(f"Ocorreu um erro: {e}")
finally:
    if db_cursor:
        db_cursor.close()
    if db_connection:
        db_connection.close()
